TCP/IP通信协议是一种可靠地网络协议，它在通信两端各建立一个socket，从而在两端之间形成网络虚拟链路。Java使用
Socket对象代表两段的通信端口。

要使两台计算机通信，必须让两台计算机使用同一种“语言”，IP协议只能保证计算机发送和接收分组数据。IP协议负责将消息从一个主机传送到另一个主机。
TCP协议负责建立两台计算机之间的连接，即用于发送和接收数据的虚拟链路。

一、ServerSocket创建TCP服务器端
Java中能接收其他通信实体连接请求的类是ServerSocket，ServerSocket对象用于监听来自客户端的Socket连接，如果没有，就一直等待。监听客户端连接请求的方法如下：
Socket accept():如果收到一个客户端Socket的连接请求，该方法返回一个客户端Socket对应的Socket；
否则一直处于等待状态，线程也被阻塞。

ServerSocket对象构造器：
1.ServerSocket(int port); 2.ServerSocket(int port, int backlog); 3.ServerSocket(int port, int backlog, InetAddress localAddr);
port：指定端口号； backlog:用来改变连接队列长度的参数； localAddr:多个ip地址的情况下，允许通过localAddr参数指定将ServerSocket绑定到指定的ip地址。


二、Socket对象
客户端使用Socket的构造器来连接到指定的服务器：
1.Socket(InetAddress/String remoteAddress, int port):创建连接到指定远程主机、远程端口的Socket，默认使用
本机地址的IP地址，和默认系统动态分配的端口；
2.Socket(InetAddress/String remoteAddress, int port, InetAddress localAddr, int localPort)：指定本地IP 地址和本地端口，适用于本地主机有多个IP的情形。

Socket对象输入输出流：
1.InputStream  getInputStream():让程序通过该输入流从socket中取出数据。（socket--->数据链路）
2.OutputStream getOutputStream():让程序通过该输出流向Socket中输出数据。（数据链路--->socket）

Socket超时时长：
1.setSoTimeout(int timeout):当网络连接读取操作超过时长时，系统认为操作失败，抛出SocketTimeoutException。
2.connect(InetAddress add, int time):指定时间后，如果socket还未连接到远程服务器，系统判定socket连接超时。

三、半关闭Socket
IO中表示输出已经结束，可以通过关闭输出流来实现，但在网络通信中，关闭输出流时，该输出流对应的Socket也会随之关闭。

Socket半关闭方法，只关闭Socket的输入流或者输出流，用来表示输出数据已经发送完成。
1.shutdownInput():关闭该Socket的输入流，程序还可以通过Socket的输出流输出数据；
2.shutdownOutput():关闭Socket的输出流，程序可以通过Socket的输入流读取数据。
Socket可用过isInputShutdown()方法判断是否处于半读状态，通过isOutputShutdown()判断是否处于半写状态。





